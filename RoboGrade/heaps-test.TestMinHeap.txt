-------------------
CSE247 Robot tester starts testing heaps on 2019-10-13 23:27:15 -0500

========
Testing in ./GradingRepos/repos/labs-chaow: heaps as of 2019-10-05 00:05
========
Now in: /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-chaow
Your branch is up-to-date with 'origin/master'.
HEAD is now at f215200 robograde
No local changes to save

Updating f215200..9272feb
Fast-forward
 RoboGrade/heaps-test.TestExtractMin.txt | 197 +++++++++++++++++++++++++++++---
 1 file changed, 182 insertions(+), 15 deletions(-)
Going back in time to: 2019-10-05 00:05
At hash 8b1576d19dccf5b300ae378dae0b72d10a1efdd9

Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

copytest:
     [echo] would copy from /home/coles/git/cse247/cse247-f19-graders/ key chaow testfilesource test/TestMinHeap package heaps repo ./GradingRepos/repos/labs-chaow
     [copy] Copying 1 file to /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-chaow/labs/heaps/test

BUILD SUCCESSFUL
Total time: 0 seconds
Compiling the code
Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [javac] Compiling 1 source file to /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-chaow/bin

BUILD SUCCESSFUL
Total time: 4 seconds
Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-chaow/bin

BUILD SUCCESSFUL
Total time: 3 seconds
Running test test.TestMinHeap
Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                4                               3                               5                               20              
    [junit]        9               6               7               8               10              27              23              21      
    [junit]    16      22      18      12      15      13      19      11      34      14      44      43      35      33      38      32  
    [junit]  42  26  47  28  39  25  40  36  29  48  24  17  46  30  45  31  49  37  41
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.189 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                4                               3                               5                               20              
    [junit]        9               6               7               8               10              27              23              21      
    [junit]    16      22      18      12      15      13      19      11      34      14      44      43      35      33      38      32  
    [junit]  42  26  47  28  39  25  40  36  29  48  24  17  46  30  45  31  49  37  41
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.189 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                4                               3                               5                               20              
    [junit]        9               6               7               8               10              27              23              21      
    [junit]    16      22      18      12      15      13      19      11      34      14      44      43      35      33      38      32  
    [junit]  42  26  47  28  39  25  40  36  29  48  24  17  46  30  45  31  49  37  41
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.195 sec
    [junit] Testcase: testEmptyHeap took 0.028 sec
    [junit] Testcase: testAndPrint took 0.111 sec
    [junit] Testcase: testExtractMin took 0.233 sec
    [junit] Testcase: testLocUpdatedHeapify took 0.041 sec
    [junit] Testcase: testInsert took 0.001 sec
    [junit] Testcase: testUsingHeapSort took 5.492 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 7 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2019-10-13 23:27:34 -0500
-------------------
